name: ci
on:
  pull_request:
  push:
    branches:
    - master
  schedule:
  - cron: '00 01 * * *'

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        - stable
        - beta
        - nightly
        - macos
        - win-msvc
        include:
        - build: stable
          os: ubuntu-latest
          rust: stable
        - build: beta
          os: ubuntu-latest
          rust: beta
        - build: nightly
          os: ubuntu-latest
          rust: nightly
        - build: macos
          os: macos-latest
          rust: stable
        - build: win-msvc
          os: windows-latest
          rust: stable
    steps:
    - uses: actions/checkout@v2
    - name: Cache saves
      uses: actions/cache@v2
      with:
        path: verifier/assets/saves
        key: verifier/assets/saves
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Build
      run: cargo build --all --verbose
    - name: GCC can build
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./target
      run: |
        cp ../sample.c .
        cp ../sample.cpp .
        cp ../rakaly_wrapper.h .
        cp ./debug/librakaly.so .
        gcc sample.c -o melter -Werror -Wall -Wextra -O3 librakaly.so
        clang++ sample.cpp -o meltercpp -Werror -Wall -Wextra -std=c++17 librakaly.so
    - name: Previous release uploaded correctly
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./verifier
      run: |
        curl 'https://api.github.com/repos/rakaly/librakaly/releases/latest' | jq '.assets[].browser_download_url' | xargs -n1 curl -O -L
        cargo build --release
        LD_LIBRARY_PATH=. cargo run --release -- --game eu4 > /dev/null
        LD_LIBRARY_PATH=. cargo run --release -- --game ck3 > /dev/null
    - name: Previous release uploaded correctly (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: ./verifier
      run: |
        Invoke-WebRequest -OutFile .\release.json -Uri 'https://api.github.com/repos/rakaly/librakaly/releases/latest'
        jq -r '.assets[].browser_download_url' .\release.json | Out-File -FilePath .\urls.txt
        foreach ($line in Get-Content .\urls.txt) {
            Write-Host "$line"
            Invoke-WebRequest -Uri $line -OutFile $(Split-Path -Path "$line" -Leaf)
        }
        cargo build --release
        cargo run --release -- --game eu4 | Out-Null
        cargo run --release -- --game ck3 | Out-Null
